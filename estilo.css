document.addEventListener('DOMContentLoaded', () => {
    // Verifica se o usuário está logado
    if (!localStorage.getItem('isLoggedIn')) {
        window.location.href = 'login.html';
    }

    // Pega os elementos do DOM
    const tarefaInput = document.querySelector("#tarefa");
    const btn = document.querySelector("#btn");
    const lista = document.querySelector("#lista");
    const logoutBtn = document.querySelector("#logout-btn");
    const manageBtn = document.querySelector("#manage-btn");
    const manageContainer = document.querySelector("#manage-account-container");
    const manageForm = document.querySelector("#manage-form");
    const currentUsernameInput = document.querySelector("#current-username");
    const currentPasswordInput = document.querySelector("#current-password");
    const newPasswordInput = document.querySelector("#new-password");
    const manageMessage = document.querySelector("#manage-message");

    const editModal = document.querySelector("#edit-modal");
    const editForm = document.querySelector("#edit-form");
    const editTarefaInput = document.querySelector("#edit-tarefa");
    const editHorarioInput = document.querySelector("#edit-horario");
    const saveEditBtn = document.querySelector("#save-edit-btn");
    const cancelEditBtn = document.querySelector("#cancel-edit-btn");

    let tarefas = [];
    let tarefaSendoEditadaIndex = null;

    // Função para renderizar as tarefas na tela a partir do array 'tarefas'.
    function renderizarTarefas() {
        lista.innerHTML = '';
        
        tarefas.forEach((item, index) => {
            const li = document.createElement('li');
            li.classList.add('tarefa-item');
            
            if (item.concluida) {
                li.classList.add('concluida');
            }

            li.innerHTML = `
                <i class="fas fa-check-circle check"></i>
                <div class="task-details">
                    <span>${item.texto}</span>
                    <span class="task-time">${item.horario ? item.horario : ''}</span>
                </div>
                <i class="fas fa-edit edit-btn" data-index="${index}"></i>
                <i class="fa-solid fa-trash-can close" data-index="${index}"></i>
            `;
            lista.appendChild(li);
        });
    }

    // Função para carregar as tarefas do LocalStorage
    function carregarTarefas() {
        const tarefasSalvas = localStorage.getItem('minhasTarefas');
        if (tarefasSalvas) {
            tarefas = JSON.parse(tarefasSalvas);
        }
        renderizarTarefas();
    }

    // Função para salvar as tarefas no LocalStorage
    function salvarTarefas() {
        localStorage.setItem('minhasTarefas', JSON.stringify(tarefas));
    }

    // Adiciona nova tarefa
    btn.addEventListener("click", function() {
        const textoTarefa = tarefaInput.value.trim();
        if (textoTarefa === "") {
            alert("Digite uma tarefa válida!");
        } else {
            tarefas.push({
                texto: textoTarefa,
                concluida: false,
                horario: "" // Nova propriedade para o horário
            });
            
            salvarTarefas();
            renderizarTarefas();
            tarefaInput.value = "";
        }
    });

    // Lógica para clique na lista (marcar/remover/editar)
    lista.addEventListener("click", function(e) {
        // Lógica para marcar/desmarcar como concluída
        if (e.target.classList.contains("check")) {
            const li = e.target.parentElement;
            const index = Array.from(lista.children).indexOf(li);

            tarefas[index].concluida = !tarefas[index].concluida;
            li.classList.toggle('concluida');
            salvarTarefas();
        }

        // Lógica para remover a tarefa
        if (e.target.classList.contains("close")) {
            const li = e.target.parentElement;
            const index = Array.from(lista.children).indexOf(li);
            
            tarefas.splice(index, 1);
            salvarTarefas();
            renderizarTarefas();
        }

        // Lógica para editar a tarefa
        if (e.target.classList.contains("edit-btn")) {
            const index = parseInt(e.target.dataset.index);
            tarefaSendoEditadaIndex = index;
            
            // Popula o formulário com os dados da tarefa selecionada
            editTarefaInput.value = tarefas[index].texto;
            editHorarioInput.value = tarefas[index].horario;

            // Mostra o modal de edição
            editModal.classList.remove('hidden');
        }
    });

    // Lógica do modal de edição
    editForm.addEventListener('submit', (e) => {
        e.preventDefault();

        const novoTexto = editTarefaInput.value.trim();
        const novoHorario = editHorarioInput.value;

        if (novoTexto === "") {
            alert("A tarefa não pode ficar vazia!");
            return;
        }

        tarefas[tarefaSendoEditadaIndex].texto = novoTexto;
        tarefas[tarefaSendoEditadaIndex].horario = novoHorario;

        salvarTarefas();
        renderizarTarefas();

        // Esconde o modal
        editModal.classList.add('hidden');
    });

    cancelEditBtn.addEventListener('click', () => {
        // Esconde o modal sem salvar as alterações
        editModal.classList.add('hidden');
    });

    // --- Lógica para redefinir senha e fazer logout ---
    manageBtn.addEventListener('click', () => {
        manageContainer.classList.toggle('hidden');
        manageMessage.textContent = '';
    });

    manageForm.addEventListener('submit', (e) => {
        e.preventDefault();

        const enteredUsername = currentUsernameInput.value;
        const enteredPassword = currentPasswordInput.value;
        const newPassword = newPasswordInput.value;

        const savedUsername = localStorage.getItem('username');
        const savedPassword = localStorage.getItem('password');

        if (enteredUsername === savedUsername && enteredPassword === savedPassword) {
            localStorage.setItem('password', newPassword);
            manageMessage.textContent = 'Senha alterada com sucesso!';
            manageMessage.style.color = 'green';
            currentUsernameInput.value = '';
            currentPasswordInput.value = '';
            newPasswordInput.value = '';
        } else {
            manageMessage.textContent = 'Usuário ou senha atuais incorretos.';
            manageMessage.style.color = 'red';
        }
    });

    logoutBtn.addEventListener('click', () => {
        localStorage.removeItem('isLoggedIn');
        window.location.href = 'login.html';
    });

    // Inicia o projeto
    carregarTarefas();
});
